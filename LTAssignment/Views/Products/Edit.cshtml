@using LTAssignment.Models.Product;
@model LTAssignment.Models.Product.ProductMaster

@{
    ViewData["Title"] = "Edit";
}

<h1>Update Product</h1>

 
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="UpdateProduct">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID" />

            <div class="form-group">
                <label asp-for="ProductName" class="control-label"></label>
                <input asp-for="ProductName" class="form-control" />
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryID" class="control-label"></label>
                @Html.DropDownList("CategoryID", (SelectList)ViewBag.CategorySelectList, "-- Select Category --", new { @class = "form-control" })
                <span asp-validation-for="CategoryID" class="text-danger"></span>
            </div>

            @* <div class="form-group">
                <label asp-for="CategoryID" class="control-label"></label>
                <input asp-for="CategoryName" class="form-control" />
                <span asp-validation-for="CategoryID" class="text-danger"></span>
            </div> *@
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>

             
            <br />
            <div class="form-group"> 
         <p>Images</p>
                @if (!string.IsNullOrEmpty(Model.ProductImages))
                {
                    try
                    {
                        var productImages = Newtonsoft.Json.JsonConvert.DeserializeObject<List<ProductImageD>>(Model.ProductImages);
                        if (productImages != null && productImages.Any())
                        {
                            foreach (var image in productImages)
                            {
                                var imageUrl = Url.Content("~/" + image.ProductImages.Replace("wwwroot/", ""));
                            <img src="@imageUrl" alt="Product Image" class="img-thumbnail" style="width: 200px; height: 150px; margin: 5px;" />
                            }
                        }
                        else
                        {
                        <p>No images available.</p>
                        }
                    }
                    catch (Exception ex)
                    {
                    <p>No images available.</p>
                    }
                }
                else
                {
                <p>No images available.</p>
                }
 
            </div>

            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="GetProductList">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
